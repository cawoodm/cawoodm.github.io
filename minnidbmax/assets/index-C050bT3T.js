(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const i of a)if(i.type==="childList")for(const r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function e(a){const i={};return a.integrity&&(i.integrity=a.integrity),a.referrerPolicy&&(i.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?i.credentials="include":a.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(a){if(a.ep)return;a.ep=!0;const i=e(a);fetch(a.href,i)}})();const p="https://api.github.com",f=function(d){return{async request(t){const e=t.url.startsWith("http")?t.url:p+t.url;return await fetch(e,{...t,body:JSON.stringify(t.data,null,2),headers:{...this._authHeader(),...t==null?void 0:t.headers,"User-Agent":"Gist-Client"}})},async get(t,e={}){return this.request({...e,method:"GET",url:t})},delete(t,e={}){return this.request({...e,method:"DELETE",url:t})},post(t,e=void 0,s={}){return this.request({...s,method:"POST",url:t,data:e})},put(t,e=void 0,s={}){return this.request({...s,method:"PUT",url:t,data:e})},patch(t,e=void 0,s={}){return this.request({...s,method:"PATCH",url:t,data:e})},create(t,e){return this.post("/gists",t,e)},update(t,e,s={}){return this.patch(`/gists/${t}`,e,{headers:{Accept:"application/vnd.github+jso",...s}})},async getOne(t,e){return this.get(`/gists/${t}`,e)},delOne(t,e){return this.delete(`/gists/${t}`,e)},_authHeader(){return d?{Authorization:`Bearer ${d}`}:{}}}};class g extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"});const t=document.getElementById("data-entry-template");this.shadowRoot.appendChild(t.content.cloneNode(!0)),this.dataArray=[],this.columns=[],this.filters=[],this.elementRect={},this.sortColumn=-1,this.sortDirection="asc"}connectedCallback(){if(this.storageKey=this.getAttribute("storage-key"),!this.storageKey)throw new Error("Data Table requires a storage-key attribute.");if(this.storageKey=="contacts")debugger;if(this.dataInput=this.shadowRoot.querySelector(".data-input"),!this.dataInput)throw new Error("Data input element not found in template.");this.tableContainer=this.shadowRoot.querySelector(".table-container"),this.alertBox=this.shadowRoot.querySelector(".alert"),this.handleKeyPress=this.handleKeyPress.bind(this),this.dataInput.addEventListener("keypress",this.handleKeyPress),this.loadFromStorage(),this.dataArray.length>0&&this.renderTable(),this.saveToStorage()}createdCallback(t){}resizedCallback(t,e){e<40||(this.elementRect.width=t,this.elementRect.height=e,this.saveToStorage())}movedCallback(t,e){this.elementRect.x=t,this.elementRect.y=e,this.saveToStorage()}minimizedCallback(t,e){this.elementRect.minimized=!0,this.saveToStorage()}maximizedCallback(t,e){this.elementRect.maximized=!0,this.saveToStorage()}restoredCallback(t,e){this.elementRect.minimized=!1,this.elementRect.maximized=!1,this.saveToStorage()}handleKeyPress(t){t.key==="Enter"&&!t.shiftKey&&(t.preventDefault(),this.processInput())}processInput(){if(!this.dataInput)throw new Error("Data input element not found in template.");const t=this.dataInput.value.trim().split(`
`).map(s=>s.trim()).filter(s=>s.length>0);let e=0;for(const s of t)if(e++,!this.processLine(s.trim())){this.showAlert(`Line ${e} failed to add due to type mismatch.`,"error");return}this.dataInput.value="",this.showAlert("Data added successfully!"),this.renderTable()}processLine(t){const e=this.parseCSV(t);return e.length===0?!1:(this.dataArray.length===0&&this.establishColumns(e),this.validateTypes(e)?(this.addDataRow(e),!0):!1)}parseCSV(t){const e=[];let s="",a=!1;for(let i=0;i<t.length;i++){const r=t[i];r==='"'?a=!a:r===","&&!a?(e.push(s.trim()),s=""):s+=r}return e.push(s.trim()),e.map(i=>i.startsWith('"')&&i.endsWith('"')?i.slice(1,-1):i)}detectType(t){if(t.toLowerCase()==="true"||t.toLowerCase()==="false")return"boolean";if(/^\d{4}-\d{2}-\d{2}$/.test(t)){const e=new Date(t);if(!isNaN(e.getTime()))return"date"}return!isNaN(parseFloat(t))&&isFinite(t)?"number":"string"}serializeToDB(t,e){switch(e){case"boolean":return t.toLowerCase()==="true";case"number":return parseFloat(t);case"date":return new Date(t).toISOString().split("T")[0];default:return t}}establishColumns(t){this.columns=t.map((e,s)=>({field:`field_${s+1}`,name:`Column ${s+1}`,type:this.detectType(e)})),this.filters=new Array(this.columns.length).fill("")}validateTypes(t){if(t.length!==this.columns.length)return!1;for(let e=0;e<t.length;e++){const s=this.detectType(t[e]);if(this.columns[e].type!=="string"&&s!==this.columns[e].type)return!1}return!0}addDataRow(t){const e=t.map((s,a)=>this.serializeToDB(s,this.columns[a].type));this.dataArray.push(e),this.saveToStorage()}renderTable(t){if(t=t||[...this.dataArray],t.length===0){this.tableContainer.innerHTML='<div class="empty-message">Enter your first data row to establish columns and data types.</div>';return}let e="<table>";e+="<thead><tr>",this.columns.forEach((s,a)=>{let i=s.name;const r=s.type;let o=[r];this.sortColumn===a&&o.push(this.sortDirection),e+=`<th data-index="${a}" class="${o.join(" ")}"><span class="column-name" data-index="${a}" title="${r}">${i}</span></th>`}),e+="<th class=actions>&nbsp;</th></tr></thead>",e+="<tbody>",this.sortColumn!==-1&&t.sort((s,a)=>{const i=s[this.sortColumn],r=a[this.sortColumn];if(this.columns[this.sortColumn].type==="date"){const o=new Date(i),n=new Date(r);return this.sortDirection==="asc"?o.getTime()-n.getTime():n.getTime()-o.getTime()}else{if(this.columns[this.sortColumn].type==="number")return this.sortDirection==="asc"?i-r:r-i;{const o=String(i).toLowerCase(),n=String(r).toLowerCase();return this.sortDirection==="asc"?o.localeCompare(n):n.localeCompare(o)}}}),e+=`<tr class="filter-row ${this.filters.find(s=>!!s)?"":"hide"}">`+this.columns.map((s,a)=>`<td><input class="filter-input" fieldIndex="${a}" value="${this.filters[a]}"/></td>`).join(" ")+"<td></td></tr>",t.forEach((s,a)=>{const i=this.dataArray.findIndex(r=>JSON.stringify(r)===JSON.stringify(s));e+="<tr>",s.forEach((r,o)=>{let n=r;const l=this.columns[o].type;let h=[l];l==="boolean"?n=`<input type='checkbox' ${r&&"checked"} dataIndex="${i}" fieldIndex="${o}">`:l==="date"?n=new Date(r).toLocaleDateString("de-CH"):typeof n=="string"&&n.match(/^#[0-9A-F]{6}$/i)&&(n=`<div style="width: 20px; height: 20px; border:1px solid silver; background-color: ${r};"></div>`),e+=`<td class="${h.join(" ")}">${n}</td>`}),e+=`<td class=actions><button class="delete-btn" data-index="${i}">&nbsp;</button></td>`,e+="</tr>"}),e+="</tbody></table>",this.tableContainer.innerHTML=e,this.addTableEventListeners()}addTableEventListeners(){this.shadowRoot.querySelectorAll("td input.filter-input").forEach(r=>{r.addEventListener("keypress",o=>{if(o.key!=="Enter")return;o.preventDefault();const n=parseInt(r.getAttribute("fieldIndex")),c=r.value.toLowerCase();this.filters[n]=c;const l=this.dataArray.filter(h=>String(h[n]).toLowerCase().includes(c));this.renderTable(l)})}),this.shadowRoot.querySelectorAll("td input[type=checkbox]").forEach(r=>{r.addEventListener("change",o=>{const n=parseInt(r.getAttribute("fieldIndex")),c=parseInt(r.getAttribute("dataIndex"));this.dataArray[c][n]=r.checked,this.saveToStorage(),this.renderTable()})}),this.shadowRoot.querySelectorAll("th:not(:last-child)").forEach(r=>{r.addEventListener("click",o=>{if(o.target.classList.contains("column-name"))return;const n=parseInt(r.getAttribute("data-index"));this.sortColumn===n?this.sortDirection=this.sortDirection==="asc"?"desc":"asc":(this.sortColumn=n,this.sortDirection="asc"),this.renderTable()})}),this.shadowRoot.querySelectorAll(".column-name").forEach(r=>{r.addEventListener("dblclick",o=>{o.stopPropagation();const n=parseInt(r.getAttribute("data-index")),c=this.columns[n].name,l=document.createElement("input");l.type="text",l.value=c,l.style.width="100%",l.style.padding="2px",l.style.boxSizing="border-box";const h=r.parentNode;h.replaceChild(l,r),l.focus(),l.addEventListener("click",u=>{u.stopPropagation()}),l.addEventListener("keyup",u=>{u.key==="Escape"&&h.replaceChild(r,l)}),l.addEventListener("keypress",u=>{u.key==="Enter"&&this.saveColumnName(n,l.value)})})}),this.shadowRoot.querySelectorAll(".delete-btn").forEach(r=>{r.addEventListener("click",()=>{const o=parseInt(r.getAttribute("data-index"));this.deleteRow(o)})})}saveColumnName(t,e){this.columns[t].name=e.trim()||`Column ${t+1}`,this.columns[t].field.match(/field_\d+/)&&(this.columns[t].field=e.trim().replace(/\s+/g,"_").toLowerCase()),this.saveToStorage(),this.renderTable()}deleteRow(t){this.dataArray.splice(t,1),this.saveToStorage(),this.renderTable()}saveToStorage(){const t={dataArray:this.dataArray,columns:this.columns,elementRect:this.elementRect};try{localStorage.setItem(this.storageKey,JSON.stringify(t))}catch(e){console.error("Data could not be persisted: "+e.message)}}loadFromStorage(){try{const t=localStorage.getItem(this.storageKey);if(t){const e=JSON.parse(t);this.dataArray=e.dataArray,this.columns=e.columns,this.elementRect=e.elementRect,this.filters=new Array(this.columns.length).fill("")}}catch(t){console.error("Data could not be loaded: "+t.message)}}showAlert(t,e="success"){this.alertBox.className="alert "+e,this.alertBox.textContent=t,this.alertBox.style.display="block",setTimeout(()=>{this.alertBox.style.display="none"},5e3)}refresh(){this.loadFromStorage(),this.renderTable()}clearData(){this.dataArray=[],this.columns=[],this.saveToStorage(),this.renderTable()}exportData(){return{data:this.dataArray,columns:this.columns,elementRect:this.elementRect}}downloadCSV(t,e){var s=document.createElement("a");s.setAttribute("href","data:text/csv;charset=utf-8,"+encodeURIComponent(e)),s.setAttribute("download",t),s.style.display="none",document.body.appendChild(s),s.click(),document.body.removeChild(s)}importData(t){return t&&t.data&&t.columns&&t.types?(this.dataArray=t.data,this.columns=t.columns,this.saveToStorage(),this.renderTable(),!0):!1}}function m(){const d=localStorage.getItem("minnidb-gist-token");if(!d)throw alert("Please set your Gist token in localStorage with key 'minnidb-gist-token'."),new Error("Gist token not found in localStorage.");if(window.gist=f(d),window.gistStorageKey=localStorage.getItem("minnidb-gist-id"),!window.gistStorageKey)throw alert("Please set your Gist token in localStorage with key 'minnidb-gist-token'."),new Error("Gist token not found in localStorage.")}window.gistSaveData=async()=>{m();let d=Object.entries(localStorage).filter(t=>t[0].match(/\-list$/)).map(([t])=>({key:t,data:localStorage.getItem(t)}));await gist.update(window.gistStorageKey,{description:"MinniDBMax data",files:{"data.json":{content:JSON.stringify({tables:d})}}}),console.debug("Data saved to Gist!")};window.gistLoadData=async()=>{m();let t=await(await gist.getOne(window.gistStorageKey)).json();JSON.parse(t.files["data.json"].content).tables.forEach(s=>{localStorage.setItem(s.key,s.data);let a=document.querySelector("#table-"+s.key.replace("-list",""));a?a.refresh():createTable(s.key.replace("-list",""),JSON.parse(s.data))}),console.debug("Data loaded from Gist!",`https://gist.github.com/cawoodm/${window.gistStorageKey}`)};customElements.define("data-entry-table",g);
