(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const a of r)if(a.type==="childList")for(const i of a.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function e(r){const a={};return r.integrity&&(a.integrity=r.integrity),r.referrerPolicy&&(a.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?a.credentials="include":r.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(r){if(r.ep)return;r.ep=!0;const a=e(r);fetch(r.href,a)}})();const p="https://api.github.com",g=function(c){return{async request(t){const e=t.url.startsWith("http")?t.url:p+t.url;return await fetch(e,{...t,body:JSON.stringify(t.data,null,2),headers:{...this._authHeader(),...t==null?void 0:t.headers,"User-Agent":"Gist-Client"}})},async get(t,e={}){return this.request({...e,method:"GET",url:t})},delete(t,e={}){return this.request({...e,method:"DELETE",url:t})},post(t,e=void 0,s={}){return this.request({...s,method:"POST",url:t,data:e})},put(t,e=void 0,s={}){return this.request({...s,method:"PUT",url:t,data:e})},patch(t,e=void 0,s={}){return this.request({...s,method:"PATCH",url:t,data:e})},create(t,e){return this.post("/gists",t,e)},update(t,e,s={}){return this.patch(`/gists/${t}`,e,{headers:{Accept:"application/vnd.github+jso",...s}})},async getOne(t,e){return this.get(`/gists/${t}`,e)},delOne(t,e){return this.delete(`/gists/${t}`,e)},_authHeader(){return c?{Authorization:`Bearer ${c}`}:{}}}};class y extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"});const t=document.getElementById("data-entry-template");this.shadowRoot.appendChild(t.content.cloneNode(!0)),this.dataArray=[],this.columns=[],this.filters=[],this.elementRect={},this.sortColumn=-1,this.sortDirection="asc"}connectedCallback(){if(this.storageKey=this.getAttribute("storage-key"),!this.storageKey)throw new Error("Data Table requires a storage-key attribute.");if(this.dataInput=this.shadowRoot.querySelector(".input-container textarea"),!this.dataInput)throw new Error("Data input element not found in template.");this.tableContainer=this.shadowRoot.querySelector(".table-container"),this.alertBox=this.shadowRoot.querySelector(".alert"),this.handleKeyPress=this.handleKeyPress.bind(this),this.dataInput.addEventListener("keypress",this.handleKeyPress),this.loadFromStorage(),this.dataArray.length>0&&this.renderTable(),this.saveToStorage()}createdCallback(t){}resizedCallback(t,e){e<40||(this.elementRect.width=t,this.elementRect.height=e,this.saveToStorage())}movedCallback(t,e){this.elementRect.x=t,this.elementRect.y=e,this.saveToStorage()}minimizedCallback(t,e){this.elementRect.minimized=!0,this.saveToStorage()}maximizedCallback(t,e){this.elementRect.maximized=!0,this.saveToStorage()}restoredCallback(t,e){this.elementRect.minimized=!1,this.elementRect.maximized=!1,this.saveToStorage()}handleKeyPress(t){t.key==="Enter"&&!t.shiftKey&&(t.preventDefault(),this.processInput())}processInput(){if(!this.dataInput)throw new Error("Data input element not found in template.");const t=this.dataInput.value.trim().split(`
`).map(s=>s.trim()).filter(s=>s.length>0);let e=0;for(const s of t){e++;const r=this.parseCSV(s.trim());if(r.length!==0){if(this.dataArray.length===0&&e===1){let a=null;if(r.every(i=>typeof i=="string")){a=r;let i=t.length>1?this.parseCSV(t[1]):r;this.establishColumns(i,a);continue}this.establishColumns(r)}try{this.processLine(r)}catch(a){this.showAlert(`Line ${e} failed: ${a.message}`,"error");return}}}this.dataInput.value="",this.showAlert("Data added successfully!"),this.renderTable()}processLine(t){var e=this.validateTypes(t);if(e)throw new Error(e);this.addDataRow(t)}parseCSV(t){const e=[];let s="",r=!1;for(let a=0;a<t.length;a++){const i=t[a];i==='"'?r=!r:i===","&&!r?(e.push(s.trim()),s=""):s+=i}return e.push(s.trim()),e.map(a=>a.startsWith('"')&&a.endsWith('"')?a.slice(1,-1):a)}detectType(t){if(t.toLowerCase()==="true"||t.toLowerCase()==="false")return"boolean";if(/^\d{4}-\d{2}-\d{2}$/.test(t)){const e=new Date(t);if(!isNaN(e.getTime()))return"date"}return!isNaN(parseFloat(t))&&isFinite(t)?"number":"string"}serializeToDB(t,e){switch(e){case"boolean":return t.toLowerCase()==="true";case"number":return parseFloat(t);case"date":return new Date(t).toISOString().split("T")[0];default:return t}}establishColumns(t,e){this.columns=t.map((s,r)=>({field:(e==null?void 0:e[r])||`field_${r+1}`,name:(e==null?void 0:e[r])||`Column ${r+1}`,type:this.detectType(s),default:null,max:0})),this.filters=new Array(this.columns.length).fill("")}validateTypes(t){if(t.length!==this.columns.length)for(let e=t.length;e<this.columns.length;e++){let s=this.columns[e].default;if(!s)return`No default for column ${e} (${this.columns[e].field})!`;t.push(s)}if(t.length!==this.columns.length)return`Number of values (${t.length}) does not match column count (${this.columns.length})!`;for(let e=0;e<t.length;e++){const s=this.detectType(t[e]);if(this.columns[e].type!=="string"&&s!==this.columns[e].type)return`Column ${e} "${t[e]}" of wrong type (${s}): should be ${this.columns[e].type}!`}}addDataRow(t){const e=t.map((s,r)=>this.serializeToDB(s,this.columns[r].type));return this.dataArray.push(e),!0}renderTable(t){if(t=t||[...this.dataArray],t.length===0){this.tableContainer.innerHTML='<div class="empty-message">Enter your first data row to establish columns and data types.</div>';return}let e="<table>";e+="<thead><tr>",this.columns.forEach((s,r)=>{let a=s.name;const i=s.type;let o=[i];this.sortColumn===r&&o.push(this.sortDirection),e+=`<th data-index="${r}" class="${o.join(" ")}"><span class="column-name" data-index="${r}" title="${s.field}:${i}">${a}</span></th>`}),e+="<th class=actions>+</th></tr></thead>",e+="<tbody>",this.sortColumn!==-1&&t.sort((s,r)=>{const a=s[this.sortColumn],i=r[this.sortColumn];if(this.columns[this.sortColumn].type==="date"){const o=new Date(a),n=new Date(i);return this.sortDirection==="asc"?o.getTime()-n.getTime():n.getTime()-o.getTime()}else{if(this.columns[this.sortColumn].type==="number")return this.sortDirection==="asc"?a-i:i-a;{const o=String(a).toLowerCase(),n=String(i).toLowerCase();return this.sortDirection==="asc"?o.localeCompare(n):n.localeCompare(o)}}}),e+=`<tr class="filter-row ${this.filters.find(s=>!!s)?"":"hide"}">`+this.columns.map((s,r)=>`<td><input class="filter-input" fieldIndex="${r}" value="${this.filters[r]}"/></td>`).join(" ")+"<td></td></tr>",t.forEach((s,r)=>{const a=this.dataArray.findIndex(i=>JSON.stringify(i)===JSON.stringify(s));e+="<tr>",s.forEach((i,o)=>{let n=i;const l=this.columns[o].type;let h=[l];if(l==="boolean")n=`<input type='checkbox' ${i&&"checked"} dataIndex="${a}" fieldIndex="${o}">`;else if(l==="date"){try{n=new Date(i).toISOString().split("T")[0]}catch{console.warn("Invalid date",i,"in row",r+1,"column",o+1,s.join(", "))}n=`<input type="date" class="dataInput" dataIndex="${a}" fieldIndex="${o}" value="${n}">`}else l==="string"&&n.match(/^#[0-9A-F]{6}$/i)?n=`<div style="width: 20px; height: 20px; border:1px solid silver; background-color: ${i};"></div>`:n=`<input class="dataInput" dataIndex="${a}" fieldIndex="${o}" value="${n}">`;e+=`<td class="${h.join(" ")}">${n}</td>`}),e+=`<td class=actions><button class="delete-btn" data-index="${a}">&nbsp;</button></td>`,e+="</tr>"}),e+="</tbody></table>",this.tableContainer.innerHTML=e,this.addTableEventListeners()}addTableEventListeners(){this.shadowRoot.querySelectorAll("td input.filter-input").forEach(i=>{i.addEventListener("keypress",o=>{if(o.key!=="Enter")return;o.preventDefault();const n=parseInt(i.getAttribute("fieldIndex")),d=i.value.toLowerCase();this.filters[n]=d;const l=this.dataArray.filter(h=>String(h[n]).toLowerCase().includes(d));this.renderTable(l)})}),this.shadowRoot.querySelectorAll("td input").forEach(i=>{i.addEventListener("change",o=>{const n=o.target,d=parseInt(i.getAttribute("fieldIndex")),l=parseInt(i.getAttribute("dataIndex")),h=this.columns[d];if(n.type==="checkbox")this.dataArray[l][d]=i.checked;else{const u=i.value;if(h.type==="number"&&isNaN(u))return alert("Invalid number");if(h.type==="date"&&!new Date(u))return alert("Invalid date");this.dataArray[l][d]=this.serializeToDB(u,h.type)}this.saveToStorage(),this.renderTable()})}),this.shadowRoot.querySelectorAll("th:not(:last-child)").forEach(i=>{i.addEventListener("click",o=>{if(o.target.classList.contains("column-name"))return;const n=parseInt(i.getAttribute("data-index"));this.sortColumn===n?this.sortDirection=this.sortDirection==="asc"?"desc":"asc":(this.sortColumn=n,this.sortDirection="asc"),this.saveToStorage(),this.renderTable()})}),this.shadowRoot.querySelector("th:last-child").addEventListener("click",i=>{let o=prompt("Enter new column (field:name:type:default)");if(!o)return;let n=(o+":::").split(":"),d=n[0],l=n[1]||this._toTitleCase(d),h=n[3],u=n[2]||this.detectType(h);h=this.serializeToDB(h,u),this.columns.push({field:d,name:l,type:u}),this.dataArray.forEach(f=>{f.push(h)}),this.saveToStorage(),this.renderTable()}),this.shadowRoot.querySelectorAll(".column-name").forEach(i=>{i.addEventListener("dblclick",o=>{o.stopPropagation();const n=parseInt(i.getAttribute("data-index")),d=this.columns[n];d.name;const l=document.createElement("input");l.type="text",l.placeholder="Rename: field:name:type:default:maxlend",l.title=l.placeholder,l.value=d.field+":"+d.name+":"+d.type+":"+(d.default||"")+":"+(d.max||0),l.style.width="100%",l.style.padding="2px",l.style.boxSizing="border-box";const h=i.parentNode;h.replaceChild(l,i),l.focus(),l.addEventListener("click",u=>{u.stopPropagation()}),l.addEventListener("keyup",u=>{u.key==="Escape"&&h.replaceChild(i,l)}),l.addEventListener("keypress",u=>{u.key==="Enter"&&this.saveColumnName(n,l.value)})})}),this.shadowRoot.querySelectorAll(".delete-btn").forEach(i=>{i.addEventListener("click",()=>{const o=parseInt(i.getAttribute("data-index"));this.deleteRow(o)})})}_toTitleCase(t){return t.replace(/\w\S*/g,e=>e.charAt(0).toUpperCase()+e.substring(1).toLowerCase())}saveColumnName(t,e){if(!e){confirm("Are you sure you want to delete this column?")&&(this.columns.splice(t,1),this.dataArray.forEach(r=>{r.splice(t,1)}),this.saveToStorage(),this.renderTable());return}this.columns[t].name=e.trim()||`Column ${t+1}`;const s=e.split(":");s.length>1?(this.columns[t].field=s[0],this.columns[t].name=s[1],s.length>2&&(this.columns[t].type=s[2]),s.length>3&&(this.columns[t].default=s[3]),s.length>4&&(this.columns[t].max=parseInt(s[4]))):e.startsWith("!")?(this.columns[t].field=e.substring(1).trim().replace(/\s+/g,"_").toLowerCase(),this.columns[t].name=e.substring(1).trim()):this.columns[t].field.match(/field_\d+/)&&(this.columns[t].field=e.trim().replace(/\s+/g,"_").toLowerCase()),this.saveToStorage(),this.renderTable()}deleteRow(t){this.dataArray.splice(t,1),this.saveToStorage(),this.renderTable()}saveToStorage(){if(!this.storageKey)return;const t={dataArray:this.dataArray,columns:this.columns,elementRect:this.elementRect,sortColumn:this.sortColumn,sortDirection:this.sortDirection};try{window.store.set(this.storageKey,t)}catch(e){alert("Data could not be persisted: "+e.message)}}loadFromStorage(){try{const t=window.store.get(this.storageKey);if(t){const e=t;this.dataArray=e.dataArray,this.columns=e.columns,this.elementRect=e.elementRect,this.sortColumn=e.sortColumn||-1,this.sortDirection=e.sortDirection||"asc",this.filters=new Array(this.columns.length).fill("")}}catch(t){console.error("Data could not be loaded: "+t.message)}}showAlert(t,e="success"){this.alertBox.className="alert "+e,this.alertBox.textContent=t,this.alertBox.style.display="block",setTimeout(()=>{this.alertBox.style.display="none"},5e3)}refresh(){this.loadFromStorage(),this.renderTable()}clearData(){this.dataArray=[],this.columns=[],this.saveToStorage(),this.renderTable()}exportData(){return{data:this.dataArray,columns:this.columns,elementRect:this.elementRect}}exportDataCSV(){const t=this.columns.map(a=>r(a.field)).join(","),e=this.dataArray.map(s).join(`
`);return t+`
`+e;function s(a){return a.map(r)}function r(a){return typeof a=="string"&&a.includes(",")?`"${a}"`:a}}importData(t){return t&&t.data&&t.columns&&t.types?(this.dataArray=t.data,this.columns=t.columns,this.saveToStorage(),this.renderTable(),!0):!1}}function b(c){return{dir({path:t="/",suffix:e=""}={}){return Object.entries(localStorage).filter(s=>s[0].startsWith(c)).filter(s=>s[0].startsWith(t)).filter(s=>!e||s[0].endsWith(e)).map(([s,r])=>[s.replace(c,""),JSON.parse(r)])},get(t){if(!t)throw new Error("Store.get failed: Key is required");let e=localStorage.getItem(c+t);try{e=JSON.parse(e)}catch{}return typeof e>"u"&&(e=defaultValue),e},set(t,e){if(!t)throw new Error("Store.set failed: Key is required");localStorage.setItem(c+t,JSON.stringify(e))},delete(t){localStorage.removeItem(c+t)}}}function m(){const c=store.get(".gist-token");if(!c)throw alert("Please set your Gist token in browser store with key 'minnidb-gist-token'."),new Error("Gist token not found in browser store.");if(window.gist=g(c),window.gistStorageKey=store.get(".gist-id"),!window.gistStorageKey)throw alert("Please set your Gist token in browser store with key 'minnidb-gist-token'."),new Error("Gist token not found in browser store.")}window.gistSaveData=async()=>{m();let c={};store.dir({suffix:".table.json"}).forEach(([t,e])=>{c[t]={type:"application/json",filename:t,content:JSON.stringify(e,null,2)}}),await gist.update(window.gistStorageKey,{description:"MinniDBMax data",files:c}),console.debug("Data saved to Gist!")};window.gistLoadData=async()=>{m();let t=await(await gist.getOne(window.gistStorageKey)).json();Object.keys(t.files).filter(e=>e.endsWith(".table.json")).forEach(e=>{const s=JSON.parse(t.files[e].content),r=e.replace(".table.json","");if(!s)throw new Error("No data found for table: "+r);store.set(e,s);let a=document.querySelector("#table-"+r);if(a)a.refresh();else try{createTable(r,s)}catch(i){alert(`Error loading table (${r}) data:`,i.message)}}),console.debug("Data loaded from Gist!",`https://gist.github.com/cawoodm/${window.gistStorageKey}`)};customElements.define("data-entry-table",y);window.store=b("/minnidbmax/default/");
